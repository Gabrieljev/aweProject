// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2022-11-30 07:04:49.203947 +0700 WIB m=+0.050878511

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/application/health": {
            "get": {
                "description": "Put all mandatory parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck-controller"
                ],
                "summary": "Healthcheck",
                "parameters": [
                    {
                        "type": "string",
                        "default": "guest",
                        "description": "guest",
                        "name": "X-Username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "EN",
                        "description": "EN",
                        "name": "Accept-Language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/healthcheck.CheckResponseDto"
                        }
                    }
                }
            }
        },
        "/inventory/book/bulk/create": {
            "post": {
                "description": "Put all mandatory parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-controller"
                ],
                "summary": "Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "default": "guest",
                        "description": "guest",
                        "name": "X-Username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "EN",
                        "description": "EN",
                        "name": "Accept-Language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "BulkBookRequest",
                        "name": "BookDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inventory.BookBulkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/inventory/book/bulk/update/{id}": {
            "put": {
                "description": "Put all mandatory parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-controller"
                ],
                "summary": "Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "default": "guest",
                        "description": "guest",
                        "name": "X-Username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "EN",
                        "description": "EN",
                        "name": "Accept-Language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "BookRequest",
                        "name": "BookDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inventory.BookReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "objectId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/inventory/book/find/{pubId}": {
            "get": {
                "description": "Put all mandatory parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-controller"
                ],
                "summary": "Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "default": "guest",
                        "description": "guest",
                        "name": "X-Username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "EN",
                        "description": "EN",
                        "name": "Accept-Language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "publisherId",
                        "name": "pubId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inventory.BookDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.MandatoryRequestV2Dto": {
            "type": "object",
            "required": [
                "Accept-Language",
                "X-Username"
            ],
            "properties": {
                "Accept-Language": {
                    "type": "string"
                },
                "X-Username": {
                    "type": "string"
                }
            }
        },
        "healthcheck.CheckResponseDto": {
            "type": "object"
        },
        "inventory.BookBulkReq": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory.BookReq"
                    }
                }
            }
        },
        "inventory.BookDto": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "publisher": {
                    "type": "object",
                    "$ref": "#/definitions/inventory.PublisherDto"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "inventory.BookReq": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "pubId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "inventory.PublisherDto": {
            "type": "object",
            "properties": {
                "countryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{ Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface {}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
